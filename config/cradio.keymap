// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

// Home row mods macro

#define HRML(k1,k2,k3,k4) &ht LSHFT k1  &ht LALT k2  &ht LCTRL k3  &ht LGUI k4
#define HRMR(k1,k2,k3,k4) &ht RGUI k1  &ht RCTRL k2  &ht RALT k3  &ht RSHFT k4

/ {
    behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <100>;
            bindings = <&kp>, <&kp>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <0 0>;
            then-layer = <0>;
        };
    };

    combos {
        compatible = "zmk,combos";

        letter_W {
            bindings = <&kp W>;
            key-positions = <1 2>;
            layers = <0>;
        };

        letter_R {
            bindings = <&kp R>;
            key-positions = <2 3>;
            layers = <0>;
        };

        letter_S {
            bindings = <&kp S>;
            key-positions = <11 12>;
        };

        letter_F {
            bindings = <&kp F>;
            key-positions = <12 13>;
            layers = <0>;
        };

        gui {
            bindings = <&kp LGUI>;
            key-positions = <10 31>;
            layers = <0 1 2 3>;
        };

        ctrl {
            bindings = <&kp LEFT_CONTROL>;
            key-positions = <20 32>;
            layers = <0 1 2 3>;
        };

        alt {
            bindings = <&kp LEFT_ALT>;
            key-positions = <10 33>;
            layers = <0 2 1 3>;
        };

        letter_u {
            bindings = <&kp U>;
            key-positions = <6 7>;
            layers = <0>;
        };

        letter_o {
            bindings = <&kp O>;
            key-positions = <7 8>;
            layers = <0>;
        };

        letter_j {
            bindings = <&kp J>;
            key-positions = <16 17>;
            layers = <0>;
        };

        letter_x {
            bindings = <&kp X>;
            key-positions = <11 12>;
            layers = <1>;
        };

        letter_v {
            bindings = <&kp V>;
            key-positions = <12 13>;
            layers = <1>;
        };

        n_2 {
            bindings = <&kp NUMBER_2>;
            key-positions = <1 2>;
            layers = <1>;
        };

        n_4 {
            bindings = <&kp NUMBER_4>;
            key-positions = <2 3>;
            layers = <1>;
        };

        n_7 {
            bindings = <&kp NUMBER_7>;
            key-positions = <6 7>;
            layers = <1>;
        };

        n_9 {
            bindings = <&kp N9>;
            key-positions = <7 8>;
            layers = <1>;
        };
    };

    macros {
        mpApp: mpApp {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp M &kp P &kp LS(A) &kp P &kp P>;
            label = "MPAPP";
        };

        mpDoc: mpDoc {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp M &kp P &kp LS(D) &kp O &kp C>;
            label = "MPDOC";
        };

        open: open {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp O &kp P &kp E &kp N>;
            label = "OPEN";
        };

        ls: ls {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp L &kp S>;
            label = "LS";
        };

        cd: cd {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp C &kp D>;
            label = "CD";
        };

        onepass: onepass {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp M &kp P &kp LS(A) &kp P &kp P &kp SPACE &kp N1 &kp LS(P) &kp A &kp S &kp S &kp W &kp O &kp R &kp D>;
            label = "ONEPASS";
        };

        icloud: icloud {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp I &kp LS(C) &kp L &kp O &kp U &kp D>;
            label = "ICLOUD";
        };

        code: code {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp C &kp O &kp D &kp E>;
            label = "CODE";
        };

        browse: browse {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(B) &kp R &kp O &kp W &kp S &kp E &kp R>;
            label = "BROWSE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        qet {
            bindings = <
&trans  &kp Q   &kp E   &kp T      &trans       &trans    &kp Y    &kp I   &kp P   &trans
&none   &kp A   &kp D   &kp G      &trans       &trans    &kp H    &kp K   &kp L   &mo 1
&trans  &trans  &trans  &trans     &tog 3       &tog 2    &trans   &trans  &trans  &trans
                        &kp LSHFT  &kp SPACE    &kp BSPC  &kp RET
            >;
        };

        zcb {
            bindings = <
&trans  &kp N1  &kp N3  &kp N5     &trans       &trans    &kp N6   &kp N8  &kp N0    &trans
&trans  &kp Z   &kp C   &kp B      &trans       &trans    &kp N    &kp M   &kp FSLH  &trans
&trans  &trans  &trans  &trans     &trans       &trans    &trans   &trans  &trans    &trans
                        &kp LSHFT  &kp SPACE    &kp BSPC  &kp RET
            >;
        };

        arrows {
            bindings = <
&trans  &kp ESC    &kp TAB   &kp CAPS  &trans    &trans  &none     &kp UP    &none      &trans
&trans  &kp LCTRL  &kp LGUI  &kp LALT  &trans    &trans  &kp LEFT  &kp DOWN  &kp RIGHT  &none
&trans  &trans     &trans    &trans    &trans    &trans  &trans    &trans    &trans     &trans
                             &trans    &trans    &trans  &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &kp GRAVE  &kp BSLH  &kp EQUAL  &trans    &trans  &kp LBKT   &kp RBKT  &kp MINUS  &trans
&trans  &none      &none     &kp SQT    &trans    &trans  &kp COMMA  &kp DOT   &kp SEMI   &trans
&trans  &trans     &trans    &trans     &trans    &trans  &trans     &trans    &trans     &trans
                             &trans     &trans    &trans  &trans
            >;
        };
    };
};
